[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-server-troubleshoot"
version = "0.1.0"
description = "MCP server for Kubernetes support bundles"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    # Core dependencies with version constraints
    "mcp>=0.5.0",
    "pydantic>=2.0.0",
    "aiohttp>=3.8.0",
    "fastapi>=0.110.0",
    "uvicorn>=0.27.1",
    "typer>=0.9.0",
    "pyyaml>=6.0"  # Required for kubeconfig parsing
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-timeout",
    "pytest-cov",
    "black",
    "ruff",
    "mypy",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
mcp_server_troubleshoot = ["py.typed"]

[project.scripts]
mcp-server-troubleshoot = "mcp_server_troubleshoot.__main__:main"

[project.entry-points.console_scripts]
mcp-server-troubleshoot-serve = "mcp_server_troubleshoot.cli:main"

[project.entry-points.pytest11]
asyncio_config = "pytest_asyncio_plugin"

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
asyncio_default_test_loop_scope = "function"
filterwarnings = [
    # Only filter specific, targeted DeprecationWarnings that can't be fixed
    "ignore:^The event loop scope for asynchronous fixtures will default to the fixture caching scope.*:pytest_asyncio.plugin.PytestDeprecationWarning"
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "unit: unit tests that test isolated components",
    "integration: tests that involve multiple components working together",
    "e2e: end-to-end tests including external system interaction",
    "docker: tests that involve Docker functionality",
    "container: tests that involve running the MCP server in a container",
    "quick: quick tests for basic functionality verification",
    "slow: slow tests that take a long time to run"
]
# Default timeout for all tests
timeout = 30

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.black]
line-length = 100
target-version = ["py39"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true